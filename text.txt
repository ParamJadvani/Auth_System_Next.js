import { useForm } from "react-hook-form";
import {
    Card,
    CardHeader,
    CardContent,
    CardTitle,
} from "@/components/ui/card";
import { Form, FormControl } from "@/components/ui/form";
import {
    Select,
    SelectTrigger,
    SelectValue,
    SelectContent,
    SelectItem,
} from "@/components/ui/select";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Switch } from "@/components/ui/switch";
import {
    Calendar as CalendarIcon,
    User as UserIcon,
    Mail as MailIcon,
    Globe as GlobeIcon,
    Lock as LockIcon,
    Phone as PhoneIcon,
    MapPin as MapPinIcon,
} from "lucide-react";
import { IconInput } from "@/components/ui/icon-Input";
import { ICreateEmployeeValues, IEmployeeValues, IUpdateEmployeeValues } from '@/types/employees';
import { accountType, bloodGroupList, contributionList, genderList, maritalStatusList, processDate, salary_Contract_Period, statusList } from '@/helper/helper';
import { Label } from '@/components/ui/label';
import { FormFooter } from '@/components/ui/form/form-footer';

interface EmployeeFormProps {
    data?: IEmployeeValues;
    isEditing?: boolean;
    onSubmit: (data: ICreateEmployeeValues | IUpdateEmployeeValues) => Promise<void>;
}

export function EmployeeForm({ data, isEditing = false, onSubmit }: EmployeeFormProps) {
    const getDefaultValues = (): ICreateEmployeeValues | IUpdateEmployeeValues => {
        if (!isEditing) {
            return {
                firstname: "",
                middlename: "",
                lastname: "",
                email: "",
                password: "",
                gender: "male",
                marital_status: "unmarried",
                blood_group: "",
                date_of_birth: "",
                date_of_joining: "",
                probation_end_date: "",
                status: "active",
                last_working_date: "",
                abry_contribution: 0,
                esi_contribution: 0,
                pf_contribution: 0,
                employee_id: "",
                next_increment_date: "",
                salary_contract_period: "",
                salary_increment_date: "",
                nationality: "",
                hold_percentage: 0,
            };
        } else if (data) {
            return {
                ...data,
                middlename: data.middlename,
                lastname: data.lastname,
                designation: data.designation,
                aadhar_card: data.aadhar_card,
                pan_card: data.pan_card,
                pf_account_no: data.pf_account_no,
                uan_no: data.uan_no,
                esi_no: data.esi_no,
                blood_group: data.blood_group,
                residential: data.address?.residential,
                city: data.address?.city,
                state: data.address?.state,
                country: data.address?.country,
                bank_name: data.bank_info?.bank_name,
                account_holder_name: data.bank_info?.account_holder_name,
                account_no: data.bank_info?.account_no,
                branch_name: data.bank_info?.branch_name,
                ifsc_code: data.bank_info?.ifsc_code,
                account_type: data.bank_info?.account_type,
                degree: data.education_info?.degree,
                college_name: data.education_info?.college_name,
                date_of_birth: processDate(data.date_of_birth, 'date'),
                last_working_date: processDate(data.last_working_date, 'date'),
                date_of_joining: processDate(data.date_of_joining, 'date'),
                probation_end_date: processDate(data.probation_end_date, 'date'),
                start_month_year: processDate(data.education_info?.start_month_year, 'month'),
                end_month_year: processDate(data.education_info?.end_month_year, 'month'),
                pincode: data.address?.pincode,
                home: data.contact_no?.home,
                personal: data.contact_no?.personal,
                employee_id: data.employee_id,
                salary_contract_period: data.salary_contract_period,
                salary_increment_date: processDate(data.salary_increment_date, 'date'),
                next_increment_date: processDate(data.next_increment_date, 'date'),
                nationality: data.nationality,
                hold_percentage: data.hold_percentage,
            };
        }
        return {} as ICreateEmployeeValues | IUpdateEmployeeValues;
    };

    const form = useForm<ICreateEmployeeValues | IUpdateEmployeeValues>({
        defaultValues: getDefaultValues(),
    });



    return (
        <Form {...form}>
            <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
                <Card className="shadow-none border-0">
                    <CardHeader>
                        <CardTitle>Basic Details</CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-8">
                        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <FormControl>
                                <IconInput
                                    label="First Name"
                                    id="firstname"
                                    icon={UserIcon}
                                    placeholder="Enter first name"
                                    {...form.register("firstname")}
                                    className="border-gray-300 focus:ring-blue-500"
                                    aria-required
                                />
                            </FormControl>
                            <FormControl>
                                <IconInput
                                    label="Middle Name"
                                    id="middlename"
                                    icon={UserIcon}
                                    placeholder="Enter middle name"
                                    {...form.register("middlename")}
                                    className="border-gray-300 focus:ring-blue-500"
                                />
                            </FormControl>
                            <FormControl>
                                <IconInput
                                    label="Last Name"
                                    id="lastname"
                                    icon={UserIcon}
                                    placeholder="Enter last name"
                                    {...form.register("lastname")}
                                    className="border-gray-300 focus:ring-blue-500"
                                />
                            </FormControl>
                        </div>
                        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <FormControl>
                                <IconInput
                                    label="Employee ID"
                                    id="employee_id"
                                    icon={UserIcon}
                                    placeholder="Enter employee ID"
                                    {...form.register("employee_id")}
                                    className="border-gray-300 focus:ring-blue-500"
                                    aria-required
                                />
                            </FormControl>
                            <FormControl>
                                <IconInput
                                    label="Nationality"
                                    id="nationality"
                                    icon={GlobeIcon}
                                    placeholder="Enter nationality"
                                    {...form.register("nationality")}
                                    className="border-gray-300 focus:ring-blue-500"
                                />
                            </FormControl>
                            <FormControl>
                                <IconInput
                                    label="Email"
                                    id="email"
                                    type="email"
                                    icon={MailIcon}
                                    placeholder="Enter email"
                                    {...form.register("email")}
                                    className="border-gray-300 focus:ring-blue-500"
                                    aria-required
                                />
                            </FormControl>
                            {!isEditing && (
                                <FormControl>
                                    <IconInput
                                        label="Password"
                                        id="password"
                                        type="password"
                                        icon={LockIcon}
                                        placeholder="Enter password"
                                        {...form.register("password")}
                                        className="border-gray-300 focus:ring-blue-500"
                                        aria-required
                                    />
                                </FormControl>
                            )}
                        </div>
                        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <div className="space-y-1">
                                <Label className="block text-sm font-medium text-gray-700">
                                    Gender <span className="text-destructive">*</span>
                                </Label>
                                <RadioGroup
                                    value={form.watch("gender")}
                                    onValueChange={(value) =>
                                        form.setValue("gender", value as IEmployeeValues["gender"])
                                    }
                                    className="flex space-x-4"
                                    aria-label="Gender"
                                >
                                    {genderList.map((gender) => (
                                        <div key={gender} className="flex items-center space-x-2">
                                            <RadioGroupItem value={gender} id={gender} />
                                            <Label htmlFor={gender} className="font-normal capitalize">{gender}</Label>
                                        </div>
                                    ))}
                                </RadioGroup>
                            </div>
                            <div className="space-y-1">
                                <Label className="block text-sm font-medium text-gray-700">
                                    Marital Status <span className="text-destructive">*</span>
                                </Label>
                                <RadioGroup
                                    value={form.watch("marital_status")}
                                    onValueChange={(value) =>
                                        form.setValue("marital_status", value as IEmployeeValues["marital_status"])
                                    }
                                    className="flex space-x-4"
                                    aria-label="Marital Status"
                                >
                                    {maritalStatusList.map((status) => (
                                        <div key={status} className="flex items-center space-x-2">
                                            <RadioGroupItem value={status} id={status} />
                                            <Label htmlFor={status} className="font-normal capitalize">{status}</Label>
                                        </div>
                                    ))}
                                </RadioGroup>
                            </div>
                        </div>
                        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <FormControl>
                                <IconInput
                                    label="Date of Birth"
                                    id="date_of_birth"
                                    type="date"
                                    icon={CalendarIcon}
                                    placeholder="Select date"
                                    {...form.register("date_of_birth")}
                                    className="border-gray-300 focus:ring-blue-500"
                                    aria-required
                                />
                            </FormControl>
                            <FormControl>
                                <IconInput
                                    label="Date of Joining"
                                    id="date_of_joining"
                                    type="date"
                                    icon={CalendarIcon}
                                    placeholder="Select date"
                                    {...form.register("date_of_joining")}
                                    className="border-gray-300 focus:ring-blue-500"
                                    aria-required
                                />
                            </FormControl>
                            <FormControl>
                                <IconInput
                                    label="Probation End Date"
                                    id="probation_end_date"
                                    type="date"
                                    icon={CalendarIcon}
                                    placeholder="Select date"
                                    {...form.register("probation_end_date")}
                                    className="border-gray-300 focus:ring-blue-500"
                                />
                            </FormControl>
                        </div>
                        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <div className="space-y-1">
                                <Label className="block text-sm font-medium text-gray-700">
                                    Status <span className="text-destructive">*</span>
                                </Label>
                                <Select
                                    value={form.watch("status")}
                                    onValueChange={(value) =>
                                        form.setValue("status", value as IEmployeeValues["status"])
                                    }
                                    aria-label="Status"
                                >
                                    <SelectTrigger className="border-gray-300 focus:ring-blue-500">
                                        <SelectValue>{form.watch("status") || "Select status"}</SelectValue>
                                    </SelectTrigger>
                                    <SelectContent>
                                        {statusList.map((status) => (
                                            <SelectItem key={status} value={status}>
                                                {status.charAt(0).toUpperCase() + status.slice(1)}
                                            </SelectItem>
                                        ))}
                                    </SelectContent>
                                </Select>
                            </div>
                            <FormControl>
                                <IconInput
                                    label="Last Working Date"
                                    id="last_working_date"
                                    type="date"
                                    icon={CalendarIcon}
                                    placeholder="Select date"
                                    {...form.register("last_working_date")}
                                    className="border-gray-300 focus:ring-blue-500"
                                />
                            </FormControl>
                            <div className="space-y-1">
                                <Label className="block text-sm font-medium text-gray-700">Blood Group</Label>
                                <Select
                                    value={form.watch("blood_group") ?? ""}
                                    onValueChange={(value) =>
                                        form.setValue("blood_group", value as IEmployeeValues["blood_group"])
                                    }
                                    aria-label="Blood Group"
                                >
                                    <SelectTrigger className="border-gray-300 focus:ring-blue-500">
                                        <SelectValue placeholder="Select blood group" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        {bloodGroupList.map((bg) => (
                                            <SelectItem key={bg} value={bg}>
                                                {bg.toUpperCase()}
                                            </SelectItem>
                                        ))}
                                    </SelectContent>
                                </Select>
                            </div>
                        </div>
                        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <FormControl>
                                <IconInput
                                    label="Next Increment Date"
                                    id="next_increment_date"
                                    type="month"
                                    icon={CalendarIcon}
                                    placeholder="Select month/year"
                                    value={form.watch("next_increment_date") ?? ""}
                                    onChange={(e) => form.setValue("next_increment_date", e.target.value)}
                                    className="border-gray-300 focus:ring-blue-500"
                                />
                            </FormControl>
                            <FormControl>
                                <IconInput
                                    label="Salary Increment Date"
                                    id="salary_increment_date"
                                    type="month"
                                    icon={CalendarIcon}
                                    placeholder="Select month/year"
                                    value={form.watch("salary_increment_date") ?? ""}
                                    onChange={(e) => form.setValue("salary_increment_date", e.target.value)}
                                    className="border-gray-300 focus:ring-blue-500"
                                />
                            </FormControl>
                            <div className="space-y-1">
                                <Label className="block text-sm font-medium text-gray-700">Salary Contract Period</Label>
                                <Select
                                    value={form.watch("salary_contract_period") ?? ""}
                                    onValueChange={(value) => form.setValue("salary_contract_period", value)}
                                    aria-label="Salary Contract Period"
                                >
                                    <SelectTrigger className="border-gray-300 focus:ring-blue-500">
                                        <SelectValue placeholder="Select contract period" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        {salary_Contract_Period.map((period) => (
                                            <SelectItem key={period} value={period}>
                                                {period} Months
                                            </SelectItem>
                                        ))}
                                    </SelectContent>
                                </Select>
                            </div>
                        </div>
                        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <div className="space-y-1">
                                <Label className="block text-sm font-medium text-gray-700">Hold Percentage</Label>
                                <Select
                                    value={form.watch("hold_percentage")?.toString() ?? ""}
                                    onValueChange={(value) => form.setValue("hold_percentage", parseInt(value))}
                                    aria-label="Hold Percentage"
                                >
                                    <SelectTrigger className="border-gray-300 focus:ring-blue-500">
                                        <SelectValue placeholder="Select percentage" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        {["30", "50", "100"].map((pct) => (
                                            <SelectItem key={pct} value={pct}>
                                                {pct}%
                                            </SelectItem>
                                        ))}
                                    </SelectContent>
                                </Select>
                            </div>
                        </div>
                        <div className="flex flex-wrap gap-4">
                            {contributionList.map((name) => (
                                <div key={name} className="flex items-center w-full sm:w-[48%] lg:w-[32%] bg-muted/30 rounded-md px-4 py-2">
                                    <Label className="capitalize mr-auto text-sm font-medium text-gray-700">
                                        {name.split("_")[0].toUpperCase()} Contribution
                                    </Label>
                                    <Switch
                                        checked={form.watch(name) === 1}
                                        onCheckedChange={(checked) => form.setValue(name, checked ? 1 : 0)}
                                        aria-label={`${name.split("_")[0]} Contribution`}
                                    />
                                </div>
                            ))}
                        </div>
                    </CardContent>
                </Card>

                {isEditing && (
                    <>
                        <Card>
                            <CardHeader>
                                <CardTitle>Contact Details</CardTitle>
                            </CardHeader>
                            <CardContent className="space-y-8">
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                                    <FormControl>
                                        <IconInput
                                            label="Residential Address"
                                            id="residential"
                                            icon={MapPinIcon}
                                            placeholder="Enter address"
                                            {...form.register("residential")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="City"
                                            id="city"
                                            icon={GlobeIcon}
                                            placeholder="Enter city"
                                            {...form.register("city")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="State"
                                            id="state"
                                            icon={MapPinIcon}
                                            placeholder="Enter state"
                                            {...form.register("state")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                </div>
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                                    <FormControl>
                                        <IconInput
                                            label="Country"
                                            id="country"
                                            icon={GlobeIcon}
                                            placeholder="Enter country"
                                            {...form.register("country")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="Pincode"
                                            id="pincode"
                                            type="number"
                                            icon={MapPinIcon}
                                            placeholder="Enter pincode"
                                            {...form.register("pincode")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="Personal Contact"
                                            id="personal"
                                            type="number"
                                            icon={PhoneIcon}
                                            placeholder="Enter personal contact"
                                            {...form.register("personal")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                </div>
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                                    <FormControl>
                                        <IconInput
                                            label="Home Contact"
                                            id="home"
                                            type="number"
                                            icon={PhoneIcon}
                                            placeholder="Enter home contact"
                                            {...form.register("home")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                </div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader>
                                <CardTitle>Bank Details</CardTitle>
                            </CardHeader>
                            <CardContent className="space-y-8">
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                                    <FormControl>
                                        <IconInput
                                            label="Bank Name"
                                            id="bank_name"
                                            icon={GlobeIcon}
                                            placeholder="Enter bank name"
                                            {...form.register("bank_name")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="Account Holder Name"
                                            id="account_holder_name"
                                            icon={UserIcon}
                                            placeholder="Enter account holder name"
                                            {...form.register("account_holder_name")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="Account Number"
                                            id="account_no"
                                            type="number"
                                            icon={GlobeIcon}
                                            placeholder="Enter account number"
                                            {...form.register("account_no")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                </div>
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                                    <FormControl>
                                        <IconInput
                                            label="Branch Name"
                                            id="branch_name"
                                            icon={MapPinIcon}
                                            placeholder="Enter branch name"
                                            {...form.register("branch_name")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="IFSC Code"
                                            id="ifsc_code"
                                            icon={GlobeIcon}
                                            placeholder="Enter IFSC code"
                                            {...form.register("ifsc_code")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <div className="space-y-1">
                                        <Label className="block text-sm font-medium text-gray-700">Account Type</Label>
                                        <Select
                                            value={form.watch("account_type")}
                                            onValueChange={(value) => form.setValue("account_type", value)}
                                            aria-label="Account Type"
                                        >
                                            <SelectTrigger className="border-gray-300 focus:ring-blue-500">
                                                <SelectValue placeholder="Select account type" />
                                            </SelectTrigger>
                                            <SelectContent>
                                                {accountType.map((type) => (
                                                    <SelectItem key={type} value={type}>
                                                        {type.charAt(0).toUpperCase() + type.slice(1)}
                                                    </SelectItem>
                                                ))}
                                            </SelectContent>
                                        </Select>
                                    </div>
                                </div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader>
                                <CardTitle>Document Details</CardTitle>
                            </CardHeader>
                            <CardContent className="space-y-8">
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                                    <FormControl>
                                        <IconInput
                                            label="Aadhar Card Number"
                                            id="aadhar_card"
                                            icon={GlobeIcon}
                                            placeholder="Enter Aadhar number"
                                            {...form.register("aadhar_card")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="PAN Card Number"
                                            id="pan_card"
                                            icon={UserIcon}
                                            placeholder="Enter PAN number"
                                            {...form.register("pan_card")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                </div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader>
                                <CardTitle>Education Details</CardTitle>
                            </CardHeader>
                            <CardContent className="space-y-8">
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                                    <FormControl>
                                        <IconInput
                                            label="Degree"
                                            id="degree"
                                            icon={GlobeIcon}
                                            placeholder="Enter degree"
                                            {...form.register("degree")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="College/University"
                                            id="college_name"
                                            icon={GlobeIcon}
                                            placeholder="Enter college/university"
                                            {...form.register("college_name")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="Designation"
                                            id="designation"
                                            icon={UserIcon}
                                            placeholder="Enter designation"
                                            {...form.register("designation")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                </div>
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                                    <FormControl>
                                        <IconInput
                                            label="Start Month/Year"
                                            id="start_month_year"
                                            type="month"
                                            icon={CalendarIcon}
                                            placeholder="Select month/year"
                                            value={form.watch("start_month_year") ?? ""}
                                            onChange={(e) => form.setValue("start_month_year", e.target.value)}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="End Month/Year"
                                            id="end_month_year"
                                            type="month"
                                            icon={CalendarIcon}
                                            placeholder="Select month/year"
                                            value={form.watch("end_month_year") ?? ""}
                                            onChange={(e) => form.setValue("end_month_year", e.target.value)}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                </div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader>
                                <CardTitle>PF A/C, UAN & ESI Details</CardTitle>
                            </CardHeader>
                            <CardContent className="space-y-8">
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                                    <FormControl>
                                        <IconInput
                                            label="PF Account Number"
                                            id="pf_account_no"
                                            icon={GlobeIcon}
                                            placeholder="Enter PF account number"
                                            {...form.register("pf_account_no")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="UAN Number"
                                            id="uan_no"
                                            icon={GlobeIcon}
                                            placeholder="Enter UAN number"
                                            {...form.register("uan_no")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                    <FormControl>
                                        <IconInput
                                            label="ESI Number"
                                            id="esi_no"
                                            icon={GlobeIcon}
                                            placeholder="Enter ESI number"
                                            {...form.register("esi_no")}
                                            className="border-gray-300 focus:ring-blue-500"
                                        />
                                    </FormControl>
                                </div>
                            </CardContent>
                        </Card>
                    </>
                )}

                <FormFooter editing={isEditing} submitting={form.formState.isSubmitting} />
            </form>
        </Form>
    );
}


<Card className="w-full max-w-lg shadow-lg">
    <CardHeader>
        <CardTitle className="text-2xl">Company Registration</CardTitle>
        <CardDescription>Fill in your company details below</CardDescription>
    </CardHeader>

    <Form {...form}>
        <form onSubmit={handleSubmit(onSubmit)}>
            <CardContent className="space-y-4">
                <FormControl>
                    <IconInput
                        id="company_name"
                        label="Company Name"
                        placeholder="company name..."
                        {...register("company_name")}
                    />
                </FormControl>
                <FormControl>
                    <IconInput
                        id="email"
                        label="Email"
                        type="email"
                        placeholder="email address..."
                        {...register("email")}
                    />
                </FormControl>
                <FormControl>
                    <IconInput
                        id="contact_no"
                        label="Contact Number"
                        type="tel"
                        placeholder="contact number.."
                        {...register("contact_no")}
                    />
                </FormControl>

                <div className="grid grid-cols-2 gap-4">
                    <FormControl>
                        <IconInput
                            id="city"
                            label="City"
                            placeholder="city..."
                            {...register("city")}
                        />
                    </FormControl>
                    <FormControl>
                        <IconInput
                            id="state"
                            label="State"
                            placeholder="state..."
                            {...register("state")}
                        />
                    </FormControl>
                </div>

                <div className="grid grid-cols-2 gap-4">
                    <FormControl>
                        <IconInput
                            id="country"
                            label="Country"
                            placeholder="country..."
                            {...register("country")}
                        />
                    </FormControl>
                    <FormControl>
                        <IconInput
                            id="pincode"
                            label="Pincode"
                            placeholder="pincode..."
                            {...register("pincode")}
                        />
                    </FormControl>
                </div>

                <FormControl>
                    <IconInput
                        id="address"
                        label="Address"
                        placeholder="address..."
                        {...register("address")}
                    />
                </FormControl>

                {/* Logo Upload */}
                <FormControl>
                    <div>
                        <label htmlFor="logo" className="block mb-1 font-medium">Company Logo</label>
                        <div className="flex items-center space-x-4">
                            <Avatar className="h-16 w-16">
                                {logoPreview ? (
                                    <AvatarImage src={logoPreview} alt="Logo Preview" />
                                ) : (
                                    <AvatarFallback>
                                        <LucideUploadCloud className="h-8 w-8 text-gray-400" />
                                    </AvatarFallback>
                                )}
                            </Avatar>
                            <Input
                                id="logo"
                                type="file"
                                accept="image/*"
                                className="cursor-pointer"
                                {...register("logo")}
                                onChange={handleLogoChange}
                            />
                        </div>
                    </div>
                </FormControl>
            </CardContent>

            <CardFooter className="flex flex-col space-y-2 mt-4">
                <Button
                    type="submit"
                    disabled={isSubmitting}
                    className="w-full rounded-full text-sm sm:text-base h-10"
                >
                    {isSubmitting ? "Submitting..." : "Register Company"}
                </Button>
                <Button
                    type="button"
                    variant="outline"
                    onClick={async () => {
                        await logout();
                        toast.success("Logout Successful");
                    }}
                    className="w-full sm:w-auto md:w-[158px] mt-2 rounded-full text-sm sm:text-base h-10"
                >
                    Logout
                </Button>
            </CardFooter>
        </form>
    </Form>
</Card>